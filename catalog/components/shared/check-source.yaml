---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: check-source
  annotations:
    kapp.k14s.io/change-group: "tasks"
spec:
  params:
    - name: git-branch
      description: A git branch ref to watch for new source
      default: ''
    - name: git-tag
      description: A git tag ref to watch for new source
      default: ''
    - name: git-commit
      description: A git commit sha to use
      default: ''
    - name: git-url
      description: The url to the git source repository. +Required

  results:
    - name: sha
      description: The sha to clone as configured by commit/branch/tag
    - name: checksum
      description: The sha to clone as configured by commit/branch/tag
    - name: git-url
      description: The git url of the repository
    - name: message
      description: Important result description, especially for error messages

  stepTemplate:
    securityContext:
      allowPrivilegeEscalation: false
      runAsUser: 1001
      capabilities:
        drop:
          - ALL
      seccompProfile:
        type: "RuntimeDefault"
      runAsNonRoot: true

  steps:
    - name: get-latest-commit
      image: us-east4-docker.pkg.dev/adhol-playground/image-base/big-base:latest
      script: |
        if [ "$(params.git-url)" == "" ]; then
          printf "No git-url provided. git-url must exist" | tee $(results.message.path)
          exit 1
        fi
        
        printf "$(params.git-url)" | tee $(results.git-url.path)
        
        if [ "$(params.git-branch)" != "" ]; then
          git ls-remote --heads $(params.git-url) $(params.git-branch) | awk '{print $1}' | tr -d '\n' | tee $(results.sha.path)
          printf "using git-branch: $(params.git-branch)" | tee $(results.message.path)
        elif [ "$(params.git-tag)" != "" ]; then
          git ls-remote --tags $(params.git-url) refs/tags/$(params.git-tag) | awk '{print $1}' | tr -d '\n' | tee $(results.sha.path)
          printf "using git-tag: $(params.git-tag)" | tee $(results.message.path)
        elif [ "$(params.git-commit)" != "" ]; then
          printf "$(params.git-commit)" | tee $(results.sha.path)
          printf "using git-commit: $(params.git-commit)" | tee $(results.message.path)
        else
          printf "Cannot look for source, you must provide one of git-branch, git-tag, git-commit or git-url." | tee $(results.message.path)
          exit 1
        fi

