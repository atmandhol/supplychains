---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: alm-store-content-oci
spec:
  params:
  - name: workload-name
    type: string
  results:
  - name: digest
    type: string
  - name: url
    type: string
  - name: message
    type: string
  stepTemplate:
    computeResources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsNonRoot: true
      runAsUser: 1001
      seccompProfile:
        type: RuntimeDefault
  steps:
  - computeResources: {}
    env:
    - name: OCI_SERVER
      valueFrom:
        secretKeyRef:
          key: server
          name: oci-store
    - name: OCI_REPOSITORY
      valueFrom:
        secretKeyRef:
          key: repository
          name: oci-store
    - name: DOCKER_CONFIG
      value: /tekton/home/.docker/
    - name: HOME
      value: /tekton/home/
    image: registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:47c828c51178f178ebb9fb0f56064f40f3382ad4b010c903e40691ff728a04f6
    name: store
    script: |
      #!/bin/bash

      set -euox pipefail

      # FIXME this line is horrible, but I don't (yet) want to write my own binary to do this
      IMAGE_NAME=$(imgpkg push -i ${OCI_SERVER}/${OCI_REPOSITORY}/$(params.workload-name) -f $(workspaces.input.path) --tty | grep Pushed | sed "s/Pushed//" | sed "s/'//g" | sed 's/ //g')
      if [ $? -ne 0 ]; then
        printf "upload failed" | tee $(results.message.path)
        exit 1
      fi

      printf "${IMAGE_NAME#*sha256:}" > $(results.digest.path)
      printf "${IMAGE_NAME}" > $(results.url.path)
  workspaces:
  - description: The content to be tar'ed and sent
    name: input