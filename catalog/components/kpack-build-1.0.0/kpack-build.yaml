---
apiVersion: cartographer.sh/v1alpha1
kind: Component
metadata:
  name: kpack-build-1.0.0
  annotations:
    kapp.k14s.io/change-rule.0: "upsert after upserting pipelines"
    kapp.k14s.io/change-rule.1: "delete before deleting pipelines"
spec:
  description: Builds an image from the tar source using kpack
  
  #! Config
  config:
    - path: spec.registry
      schema:
        type: object
        description: |
          Configuration for the registry to use
        properties:
          server:
            description: The name of the registry server, e.g. docker.io
            type: string
          repository:
            description: The name of the repository
            type: string
        required:
          - server
          - repository
    - path: spec.image
      schema:
        type: object
        description: |
          KPack configuration options
        properties:
          builder:
            description: The name of the cluster builder to use
            type: string
            default: default
    - path: spec.source.subPath
      schema:
        type: string
        description: The sub path in the bundle to locate source code
        example: sub-dir
        default: ""

  inputs:
  - name: source
    type: source

  # resumptions:
  #   - name: check-builders
  #     trigger:
  #       runAfter: 600s
  #     taskRef:
  #       name: check-builders
  #     params:
  #       - name: builder
  #         value: $(workload.spec.image.builder)

  #! Pipeline run definition
  pipelineRun:
    params:
      - name: workload-name
        value: $(workload.metadata.name)
      - name: ns
        value: $(workload.metadata.namespace)  
      - name: source-url
        value: $(inputs.source.url)
      - name: registry-repo
        value: $(workload.spec.registry.server)/$(workload.spec.registry.repository)
      - name: cluster-builder
        value: $(workload.spec.image.builder)
      - name: subpath
        value: $(workload.spec.source.subPath)
    pipelineRef:
      name: kpack-build

  #! Mention output from pipeline
  outputs:
    - name: image
      type: image
      digest: ""
      url: $(pipeline.results.image)
