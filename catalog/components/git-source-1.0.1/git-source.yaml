---
apiVersion: supply-chain.apps.tanzu.vmware.com/v1alpha1
kind: Component
metadata:
  name: git-source-1.0.1
  annotations:
    kapp.k14s.io/change-rule.0: "upsert after upserting pipelines"
    kapp.k14s.io/change-rule.1: "delete before deleting pipelines"
  labels:
    supply-chain.apps.tanzu.vmware.com/catalog: tanzu
spec:
  description: Monitors a git repository
  config:
    - path: spec.source
      schema:
        type: object
        properties:
          git:
            type: object
            description: |
              Fill this object in if you want your source to come from git.
              The tag, commit and branch fields are mutually exclusive, use only one.
            properties:
              tag:
                description: A git tag ref to watch for new source
                type: string
                example: v1.0.0
              commit:
                description: A git commit sha to use
                type: string
              branch:
                description: A git branch ref to watch for new source
                type: string
                example: main
              url:
                description: The url to the git source repository
                type: string
                example: https://github.com/acme/my-workload.git
            required:
              - url
          subPath:
            type: string
            description: The sub path in the bundle to locate source code
            example: sub-dir
            default: ""
        required:
          - git

  resumptions:
    - name: check-source
      trigger:
        runAfter: 300s
      taskRef:
        name: check-source
      params:
        - name: git-branch
          value: $(workload.spec.source.git.branch)
        - name: git-url
          value: $(workload.spec.source.git.url)
        - name: git-commit
          value: $(workload.spec.source.git.commit)
        - name: git-tag
          value: $(workload.spec.source.git.tag)

  pipelineRun:
    pipelineRef:
      name: git-source-1.0.1
    params:
      - name: workload-name
        value: $(workload.metadata.name)
      - name: git-url
        value: $(workload.spec.source.git.url)
      - name: sha
        value: $(resumptions.check-source.results.sha)

    workspaces:
      - name: shared-data
        volumeClaimTemplate:
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi

    taskRunSpecs:
      - pipelineTaskName: fetch
        podTemplate:
          securityContext:
            fsGroup: 65532
            runAsUser: 65532
            runAsGroup: 65532
      - pipelineTaskName: strip-git
        podTemplate:
          securityContext:
            fsGroup: 1000
            runAsUser: 1001
            runAsGroup: 1000
      - pipelineTaskName: store
        podTemplate:
          securityContext:
            fsGroup: 1000
            runAsUser: 1001
            runAsGroup: 1000

  outputs:
    - name: source
      type: source
      digest: $(pipeline.results.digest)
      url: $(pipeline.results.url)
    - name: git
      type: git
      digest: $(resumptions.check-source.results.sha)
      url: $(resumptions.check-source.results.git-url)
